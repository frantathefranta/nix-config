---
name: Check and Build Flake Config # Taken from https://github.com/Rishabh5321/dotfiles/blob/main/.github/workflows/build.yml

permissions:
  contents: read
  pull-requests: write

env:
  EXTRA_NIX_CONFIG: |
    auto-optimise-store = true
    experimental-features = nix-command flakes
    max-jobs = auto
    download-buffer-size = 500000000
    substituters = https://frantathefranta.cachix.org https://cache.nixos.org https://nix-gaming.cachix.org
    trusted-public-keys = frantathefranta.cachix.org-1:7bZkmbZyIToRYYH7uI7ItS9l8/X5Hw2TPzAfqOIme1I= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-gaming.cachix.org-1:nbjlureqMbRAxR1gJ/f3hxemL9svXaZF/Ees8vCUUs4=

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      specific_host:
        description: "Build only a specific host (leave empty for all)"
        required: false
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # These two jobs now run in parallel since they're independent
  flake-checks:
    name: Flake Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Install Nix
        uses: cachix/install-nix-action@cebd211ec2008b83bda8fb0b21c3c072f004fe04 # v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: ${{ env.EXTRA_NIX_CONFIG }}

      - name: Run Flake Check
        id: flake_check
        run: |
          nix flake check

  generate-matrix:
    name: Generate Build Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Install Nix
        uses: cachix/install-nix-action@cebd211ec2008b83bda8fb0b21c3c072f004fe04 # v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes

      - name: Generate matrix from nixosConfigurations
        id: set-matrix
        run: |
          if [ -n "${{ github.event.inputs.specific_host }}" ]; then
            # If a specific host was provided, only build that one
            HOSTS=$(echo '["${{ github.event.inputs.specific_host }}"]' | jq -c .)
          else
            # Otherwise build all hosts from the flake
            HOSTS=$(nix flake show --json | jq -c '[.nixosConfigurations | keys[]]')
          fi
          echo "matrix={\"hostname\":$HOSTS}" >> "$GITHUB_OUTPUT"

  Build_Config:
    name: Build ${{ matrix.hostname }}
    needs: [flake-checks, generate-matrix]
    runs-on: ubuntu-latest
    timeout-minutes: 180 # Prevent hung builds
    strategy:
      fail-fast: true # Stop all matrix jobs if one fails
      matrix: ${{fromJson(needs.generate-matrix.outputs.matrix)}}
    steps:
      - name: Free Disk Space
        uses: endersonmenezes/free-disk-space@3f9ec39ebae520864ac93467ee395f5237585c21 # v2
        with:
          remove_android: true
          remove_dotnet: true
          remove_haskell: true
          remove_tool_cache: true
          remove_packages: "azure-cli google-cloud-cli microsoft-edge-stable google-chrome-stable firefox postgresql* temurin-* *llvm* mysql* dotnet-sdk-*"
          remove_packages_one_command: true
          remove_folders: "/usr/share/swift /usr/share/miniconda /usr/share/az* /usr/share/glade* /usr/local/lib/node_modules /usr/local/share/chromium /usr/local/share/powershell"

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Install Nix
        uses: cachix/install-nix-action@cebd211ec2008b83bda8fb0b21c3c072f004fe04 # v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: ${{ env.EXTRA_NIX_CONFIG }}

      - name: Setup Cachix
        uses: cachix/cachix-action@0fc020193b5a1fa3ac4575aa3a7d3aa6a35435ad # v16
        with:
          name: frantathefranta
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - name: Build NixOS configuration
        id: build
        run: |
          echo "Starting Nix build for ${{ matrix.hostname }}..."

          # Create a temporary file for capturing output
          mkdir -p logs

          # Run the build and capture output to both stdout and a file
          start_time=$(date +%s)

          cachix watch-exec rishabh5321 -- \
            nix build .#nixosConfigurations.${{ matrix.hostname }}.config.system.build.toplevel \
            -v --show-trace --out-link result-${{ matrix.hostname }} 2>&1 | tee logs/build_${{ matrix.hostname }}.log

          BUILD_EXIT_CODE=${PIPESTATUS[0]}  # Get the exit code of nix build, not tee

          end_time=$(date +%s)
          build_duration=$((end_time - start_time))

          echo "Build duration: $build_duration seconds"
          echo "build_duration=$build_duration" >> $GITHUB_OUTPUT

          # If build was successful, generate a system report
          if [ $BUILD_EXIT_CODE -eq 0 ]; then
            echo "Generating system report for ${{ matrix.hostname }}..."
            nix-shell -p nix-info --run "nix-info -m" > logs/system_info_${{ matrix.hostname }}.log

            # Extract some useful information about the build
            nix path-info --json ./result-${{ matrix.hostname }} | jq 'if type == "array" then .[0] else . end | {path: .path, closureSize: .closureSize}' > logs/build_info_${{ matrix.hostname }}.json

            CLOSURE_SIZE=$(jq -r '.closureSize' logs/build_info_${{ matrix.hostname }}.json)

            if [[ "$CLOSURE_SIZE" != "null" && -n "$CLOSURE_SIZE" ]]; then
              HUMAN_SIZE=$(numfmt --to=iec-i --suffix=B "$CLOSURE_SIZE")
              echo "closure_size=$HUMAN_SIZE" >> $GITHUB_OUTPUT
            else
              echo "closure_size=unknown" >> $GITHUB_OUTPUT
              echo "Warning: closure size is null or empty"
            fi
          fi

          exit $BUILD_EXIT_CODE

      - name: Upload build logs
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: build-logs-${{ matrix.hostname }}
          path: logs/
          retention-days: 5

